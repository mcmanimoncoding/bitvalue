{"ast":null,"code":"var _jsxFileName = \"/Volumes/bigDrive/reactJSPrograms/bitvalue/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass Prices extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currency: 'USD'\n    });\n  }\n\n  render() {\n    let list = '';\n\n    if (this.state.currency === 'USD') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 20\n        }\n      }, \" Bitcoin Rate For \", this.props.bpi.USD.description, \":  \", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 16\n        }\n      }, this.props.bpi.USD.code), \" \", __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 87\n        }\n      }, this.props.bpi.USD.rate));\n    } else if (this.state.currency === 'GBP') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 20\n        }\n      }, \" Bitcoin Rate For \", this.props.bpi.GBP.description, \":  \", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 16\n        }\n      }, this.props.bpi.USD.code), \" \", __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 87\n        }\n      }, this.props.bpi.USD.rate));\n    } else if (this.state.currency === 'EUR') list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }\n    }, \" Bitcoin Rate For \", this.props.bpi.EUR.description, \":  \", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, this.props.bpi.USD.code), \" \", __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 83\n      }\n    }, this.props.bpi.USD.rate));\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, __jsx(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, list), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), __jsx(\"select\", {\n      onChange: e => this.setState({\n        currency: e.target.value\n      }),\n      name: \"\",\n      id: \"\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, __jsx(\"option\", {\n      value: \"USD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"USD\"), __jsx(\"option\", {\n      value: \"USD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"USD\"), __jsx(\"option\", {\n      value: \"USD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"USD\")));\n  }\n\n}\n\nexport default Prices;","map":{"version":3,"sources":["/Volumes/bigDrive/reactJSPrograms/bitvalue/components/Prices.js"],"names":["Prices","React","Component","currency","render","list","state","props","bpi","USD","description","code","rate","GBP","EUR","e","setState","target","value"],"mappings":"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","sourcesContent":["class Prices extends React.Component {\n\n    state = {\n        currency: 'USD'\n    }\n\n    render() {\n\n        let list = '';\n\n        if (this.state.currency === 'USD') {\n            list = <li className=\"list-group-item\"> Bitcoin Rate For {this.props.bpi.USD.description}\n            :  <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span> <strong>{this.props.bpi.USD.rate}</strong>\n            </li>\n        } else if (this.state.currency === 'GBP') {\n            list = <li className=\"list-group-item\"> Bitcoin Rate For {this.props.bpi.GBP.description}\n            :  <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span> <strong>{this.props.bpi.USD.rate}</strong>\n            </li>\n        } else if (this.state.currency === 'EUR')\n            list = <li className=\"list-group-item\"> Bitcoin Rate For {this.props.bpi.EUR.description}\n        :  <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span> <strong>{this.props.bpi.USD.rate}</strong>\n            </li>\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    {list}\n                </ul>\n                <br/>\n\n                <select onChange={e => this.setState({currency: e.target.value})} name=\"\" id=\"\" className=\"form-control\">\n                <option value=\"USD\">USD</option>\n                <option value=\"USD\">USD</option>\n                <option value=\"USD\">USD</option>\n\n                </select>\n            </div>\n        );\n    }\n}\n\nexport default Prices;"]},"metadata":{},"sourceType":"module"}